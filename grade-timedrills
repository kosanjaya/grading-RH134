#!/bin/bash

total_steps=38
current_step=0                                                                                                                                                                          
echo " _    _ _   ___    _ _   ___    _ _   ___    _ "
echo "| |  | | | / / |  | | | / / |  | | | / / |  | |"
echo "| |  | | |/ /| |  | | |/ /| |  | | |/ /| |  | |"
echo "| |/\| |    \| |/\| |    \| |/\| |    \| |/\| |"
echo "\  /\  / |\  \  /\  / |\  \  /\  / |\  \  /\  /"
echo " \/  \/\_| \_/\/  \/\_| \_/\/  \/\_| \_/\/  \/ "

echo " "
echo "TENANG AMAN DARI MENTOR.."
                                                                                                                                                      
# Function to print progress bar
print_progress() {
    percentage=$((current_step * 100 / total_steps))
    completed=$((current_step * 20 / total_steps))
    remaining=$((20 - completed))
    printf "\rProgress: ["
    printf "%0.s=" $(seq "$completed")
    printf "%0.s " $(seq "$remaining")
    printf "] %d%%" "$percentage"
}

# Increment current step and print progress
increment_step() {
    ((current_step++))
    print_progress
}

# Function to handle errors and exit
handle_error() {
    echo -e "\nError occurred at step $current_step. Exiting..."
    exit 1
}

script_grade() {
    sshnode1="ssh root@172.24.9.10"
    sshnode2="ssh root@172.24.9.11"
    echo "######### TIMEDRILLS EXERCISE GRADING ########"
    #NODE1
    echo -e "\e[1;97;43m DO THIS IN NODE1 \e[0m"
    #nomor1
    HOSTNAME_SOAL="node1.network9.example.com"
    IPADDR_SOAL="172.24.9.10/24"
    IPGATE_SOAL="172.24.9.254"
    IPDNS_SOAL="172.24.9.254"
    score1=0
    echo ""
    echo "1. Configure Network Settings"
    $sshnode1 "hostname | grep $HOSTNAME_SOAL"
    if [ $? -eq 0 ]; then
      echo "Hostname match"
      score1=$((score1 + 10))
    else
      echo "Hostname wrong"
    fi
    active_profile=$($sshnode1 nmcli --fields NAME c s --active | grep -v NAME | sed -e 's/[[:space:]]*$//')
    echo "Profile Connection Name = $active_profile"
    if [ "$active_profile" != 'Wired connection 1' ]; then
      $sshnode1 "nmcli con show '$active_profile' | grep 'ipv4.addresses:' | grep '$IPADDR_SOAL'"
      if [ $? -eq 0 ]; then
        echo "IP Addresses match"
        score1=$((score1 + 15))
      else
        echo "Wrong IP Addresses"
      fi
      $sshnode1 "nmcli con show '$active_profile' | grep 'ipv4.gateway:' | grep '$IPGATE_SOAL'"
      if [ $? -eq 0 ]; then
        echo "IP Gateway match"
        score1=$((score1 + 15))
      else
        echo "Wrong IP Gateway"
      fi
      $sshnode1 "nmcli con show '$active_profile' | grep 'ipv4.dns:' | grep '$IPDNS_SOAL'"
      if [ $? -eq 0 ]; then
        echo "IP DNS match"
        score1=$((score1 + 10))
      else
        echo "Wrong IP DNS"
      fi
      $sshnode1 ping -c2 172.24.9.254 
      if [ $? -eq 0 ]; then
        echo "Able to Ping other server"  
        score1=$((score1 + 50))
      else
        echo "Unable to Ping other server"
    fi
    else
      echo "This mentee doesnt create new connection profile, he do nmcli con modify, so no score for this question"
    fi
    echo "NILAI NOMOR1 = ${score1}%"
    echo ""
    
    #nomor2
    echo "2. Configure a Repository"
    score2=0
    appstream_url="https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/"
    baseos_url="https://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/"
    gpgcheck="gpgcheck=0"
    repos_dir="/etc/yum.repos.d/"
    for repo_file in $($sshnode1 "ls '$repos_dir'/*"); do
        if $sshnode1 [ -f "$repo_file" ]; then
            if $sshnode1 grep -q "$appstream_url" "$repo_file" && $sshnode1 grep -q "$gpgcheck" "$repo_file"; then
                echo "AppStream Repo: $repo_file"
                score2=$((score2 + 50))
            elif $sshnode1 grep -q "$baseos_url" "$repo_file" && $sshnode1 grep -q "$gpgcheck" "$repo_file"; then
                echo "BaseOS Repo: $repo_file"
                score2=$((score2 + 50))
            else
                echo "File $repo_file tidak memenuhi kriteria."
            fi
        fi
    done
    if [ $score2 -ge 100 ]; then
        score2=100
        echo "Configure Repository: PASS"
    else
        echo "Configure Repository: FAIL"
    fi
    echo "NILAI NOMOR2 = ${score2}%"
    echo ""

    # nomor3
    echo "3. Selinux HTTPD Port"
    score3=0
    $sshnode1 semanage port -l | grep "^http_port_t" | grep 82 
    if [ $? -eq 0 ]; then
      echo "Semanage Port: PASS" 
      score3=$((score3 + 50))
    else
      echo "Semanage port : Fail"
    fi  
    $sshnode1 firewall-cmd --list-all | grep "82/tcp"  
    if [ $? -eq 0 ]; then
      echo "Firewall add port: PASS" 
      score3=$((score3 + 50))
    else
      echo "Firewall add port: Fail"
    fi
    echo "NILAI NOMOR3 = ${score3}%"
    echo ""

    # nomor4
    echo "4. Create the following users, groups and group memberships"
    score4=0
    GROUP_NAME="sysadmin"
    $sshnode1 "cat /etc/group | grep $GROUP_NAME | grep harry | grep natasha"
    if [ $? -eq 0 ]; then
      echo "Create Group $GROUP_NAME: PASS"  
      score4=$((score4 + 25))
    else
      echo "Create Group $GROUP_NAME: Fail"
    fi

    $sshnode1 "cat /etc/group | grep $GROUP_NAME | grep natasha"
    if [ $? -eq 0 ]; then
      echo "Create user natasha: PASS" 
      score4=$((score4 + 25))
    else
      echo "Create user natasha: Fail"
    fi

    $sshnode1 "cat /etc/group | grep $GROUP_NAME | grep harry"
    if [ $? -eq 0 ]; then
      echo "Create user harry: PASS" 
      score4=$((score4 + 25))
    else
      echo "Create user harry: Fail"
    fi

    $sshnode1 "cat /etc/passwd | grep sarah | grep '/sbin/nologin'" 
    if [ $? -eq 0 ]; then
      echo "Create user sarah nologin: PASS"
      score4=$((score4 + 25))
    else
      echo "Create user sarah nologin: Fail"
    fi
    echo "NILAI NOMOR4 = ${score4}%"
    echo ""

    #nomor 5
    echo "5. Create a collaborative directory $COLLAB_DIR"
    score5=0
    COLLAB_DIR="/common/sysadmin"
    $sshnode1 ls -gd $COLLAB_DIR | grep $GROUP_NAME 
    if [ $? -eq 0 ]; then
      echo "Group ownership is $GROUP_NAME: PASS"
      score5=$((score5 + 40))
    else
      echo "Group ownership is $GROUP_NAME: Fail"
    fi

    $sshnode1 ls -ld $COLLAB_DIR | grep drwxrws---  
    if [ $? -eq 0 ]; then
      echo "Directory Permissions: PASS" 
      score5=$((score5 + 60))
    else
      echo "Directory Permissions: Fail"
    fi
    echo "NILAI NOMOR5 = ${score5}%"
    echo "" 

    #nomor6
    echo "6. Autofs"
    score6=0
    user_autofs="remoteuser9"
    homedir_user="/netdir/$user_autofs"
    sshpass -p "redhat" ssh $user_autofs@172.24.9.10 exit
    $sshnode1 "df -h | grep $homedir_user"
    if [ $? -eq 0 ]; then
      score6=$((score6 + 70))
      echo "Autofs mount in $homedir_user"
    else
      echo "Autofs mount failed"
    fi
    sshpass -p "redhat" ssh $user_autofs@172.24.9.10 pwd | grep $homedir_user
    if [ $? -eq 0 ]; then
      score6=$((score6 + 30))
      echo "correct homedir for $user_autofs in $homedir_user"
    else
      echo "wrong homedir for $user_autofs in $homedir_user"
    fi
    echo "NILAI NOMOR6 = ${score6}%"
    echo "" 

   #nomor7
    echo "7. Crontab"
    score7=0
    CRONTAB_USER="natasha"
    HOUR="12"
    MINUTE="30"
    COMMAND_SOAL=( "/bin/echo" "echo" )
    ARGUMENT="hello"
    ASTERISK="*"
    cmd="crontab -lu $CRONTAB_USER"
    if [[ "$($sshnode1 "$cmd" | awk '{print $1}')" == "$MINUTE" && "$($sshnode1 "$cmd" | awk '{print $2}')" == "$HOUR" && "$($sshnode1 "$cmd" | awk '{print $3}')" == "$ASTERISK" && "$($sshnode1 "$cmd" | awk '{print $4}')" == "$ASTERISK" && "$($sshnode1 "$cmd" | awk '{print $5}')" == "$ASTERISK" ]]; then
      for com in "${COMMAND_SOAL[@]}"; do
          if [[ "$($sshnode1 "$cmd" | awk '{print $6}')" == "$com" && $($sshnode1 "$cmd" | awk '{print $7}' | grep -q "$ARGUMENT"; echo $?) -eq 0 ]]; then
              echo "Crontab: PASS"
              score7=100
          fi
      done
    else
      echo "Crontab: FAIL"
    fi
    echo "NILAI NOMOR7 = ${score7}%"
    echo ""

    #nomor8
    echo "8. NTP"
    score8=0
    NTP_SERVER="server time.cloudflare.com iburst"
    $sshnode1 "cat /etc/chrony.conf | grep '${NTP_SERVER}'"
    if [ $? -eq 0 ]; then
      score8=100
      echo "Configure NTP: PASS"
    else
      echo "Configure NTP: FAIL"
    fi
    echo "NILAI NOMOR8 = ${score8}%"
    echo ""

    #nomor9
    echo "9. Locate files and copy"
    score9=0
    USER_NOMOR9="sarah"
    PATH_SOAL="/root/find.user"
    line9=$($sshnode1 "ls -al '$PATH_SOAL' | grep '$USER_NOMOR9' | wc -l")
    if [ $line9 -ge 4 ]; then
      score9=100
      echo "Locate and Copy: PASS"
    else
      echo "Locate and Copy: FAIL"
    fi
    echo "NILAI NOMOR9 = ${score9}%"
    echo ""

    #nomor10
    echo "10. Find String"
    score10=0
    PATH_STRING="/root/search.txt"
    STRING="home"
    line10=$($sshnode1 "cat '$PATH_STRING' | grep '$STRING' | wc -l")
    if [ $line10 -ge 4 ]; then
      score10=100
      echo "Find string: PASS"
    else
      echo "Find string: FAIL"
    fi
    echo "NILAI NOMOR10 = ${score10}%"
    echo ""

    #nomor11
    echo "11. Create a account"
    score11=0
    ACC_NOMOR11="alies"
    UID_NOMOR11="1326"
    $sshnode1 "id -u '$ACC_NOMOR11' | grep '$UID_NOMOR11'"
    if [ $? -eq 0 ]; then
      echo "Create user account: PASS"
      score11=100
    else
      echo "Create user account: Fail"
    fi
    echo "NILAI NOMOR11 = ${score11}%"
    echo ""

    #nomor12
    echo "12. Create archive files"
    score12=0
    ARCHIVE_NAME="/root/archive.tgz"
    TYPE="gzip"
    $sshnode1 "file '$ARCHIVE_NAME' | grep '$TYPE'"
    if [ $? -eq 0 ]; then
      echo "Archive files: PASS"
      score12=100
    else
      echo "Archive files: Fail"
    fi
    echo "NILAI NOMOR12 = ${score12}%"
    echo ""

    #nomor13
    echo "13. Build Container Image"
    score13=0
    IMAGE_NAME="monitor"
    CONTAINER_USER="neith"
    sshpass -p "redhat" ssh $CONTAINER_USER@172.24.9.10 podman images | grep "$IMAGE_NAME"
    if [ $? -eq 0 ]; then
      echo "Build Container Image: PASS"
      score13=100
    else
      echo "Build Container Image: Fail"
    fi
    echo "NILAI NOMOR13 = ${score13}%"
    echo ""

    #nomor14
    echo "14. Configure Container as System Service"
    score14=0
    CONTAINER_NAME="ascii2pdf"
    CONTAINER_USER="neith"
    sshpass -p "redhat" ssh $CONTAINER_USER@172.24.9.10 podman ps -a | grep $CONTAINER_NAME | grep -i up
    if [ $? -eq 0 ]; then
      echo "Configure Container is Up: PASS"
      score14=$((score14 + 50))
    else
      echo "Configure Container is Up: Fail"
    fi
    sshpass -p "redhat" ssh $CONTAINER_USER@172.24.9.10 systemctl --user is-active container-${CONTAINER_NAME}.service | grep ^active 
    if [ $? -eq 0 ]; then
      echo "Configure Container is Running: PASS"
      score14=$((score14 + 25))
    else
      echo "Configure Container is Running: Fail"
    fi
    sshpass -p "redhat" ssh $CONTAINER_USER@172.24.9.10 systemctl --user is-enabled container-${CONTAINER_NAME}.service | grep enable 
    if [ $? -eq 0 ]; then
      echo "Configure Container is Enable: PASS"
      score14=$((score14 + 25))
    else
      echo "Configure Container is Enable: Fail"
    fi
    echo "NILAI NOMOR14 = ${score14}%"
    echo ""

    #nomor15
    echo "15. Set the default Permissions"
    score15=0
    UMASK_USERNAME="natasha"
    $sshnode1 su - $UMASK_USERNAME -c 'umask' | grep 277 
    if [ $? -eq 0 ]; then
      echo "Default Permissions: PASS"
      score15=$((score15 + 100))
    else
      echo "Default Permissions: Fail"
    fi
    echo "NILAI NOMOR15 = ${score15}%"
    echo ""

   #nomor16
   echo "16. Set the Password expire date"
   score16=0
   $sshnode1 cat /etc/login.defs | grep "PASS_MAX_DAYS" | grep 60
   if [ $? -eq 0 ]; then
     echo "Expire Password Configuration: PASS"
     score16=$((score16+ 100))
   else
     echo "Expire Password Configuration: Fail"
   fi
   echo "NILAI NOMOR16 = ${score16}%"
   echo ""

   #nomor17
   echo "17. Assign Sudo Privilege"
   SUDO_GRP="sysadmin"
   score17=0
   sudoersfiles=($($sshnode1 "ls /etc/sudoers.d/*") /etc/sudoers)
   for sudoersfile in "${sudoersfiles[@]}"; do
      $sshnode1 "cat '$sudoersfile' | grep '%$SUDO_GRP' | grep 'NOPASSWD:'"
      if [ $? -eq 0 ]; then
         echo "This mentee do configuration in $sudoersfile"
         score17=100
      fi
   done
   if [ $score17 -eq 0 ]; then
     echo "Configure Sudoers for $SUDO_GRP Group: Fail"
   else
     echo "Configure Sudoers for $SUDO_GRP Group: PASS"
   fi
   echo "NILAI NOMOR17 = ${score17}%"
   echo ""
   
   #nomor18
   echo "18. Banner Login Message"
   BANNER_USR="alies"
   MESSAGE="Welcome to RHCSA Timedrills" 
   score18=0
   $sshnode1 su - $BANNER_USR -c "exit" | grep "$MESSAGE"
   if [ $? -eq 0 ]; then
      echo "Banner Login Message : PASS"
      score18=100
   else
      echo "Banner Login Message : Fail"
   fi
   echo "NILAI NOMOR18 = ${score18}%"
   echo ""

   #nomor19
   echo "19. Create script"
   CP_SCRIPT_PATH="/root/myfiles"
   score19=0
   line19=$($sshnode1 "cat '$CP_SCRIPT_PATH' | wc -l")
   if [ $line19 -eq 9 ]; then
      echo "Create Script : PASS"
      score19=100
   else
      echo "Create Script : Fail"
   fi
   echo "NILAI NOMOR19 = ${score19}%"
   echo ""

   #NODE2
   echo -e "\e[1;97;44m DO THIS IN NODE2 \e[0m"
   #nomor20
   echo "20. Reset Root Password"
   score20=0
   ROOT_PASS="redhat"
   $sshnode2 "useradd passtester"
   $sshnode2 "echo "redhat" | passwd --stdin passtester"
   sshpass -p "redhat" ssh passtester@172.24.9.11 echo $ROOT_PASS | su - 
   if [ $? -eq 0 ]; then
      echo "Reset Root Password : PASS"
      score20=100
   else
      echo "Reset Root Password : Fail"
   fi
   $sshnode2 "pkill -u passtester"
   $sshnode2 "userdel -rf passtester"
   echo "NILAI NOMOR20 = ${score20}%"
   echo ""

    #nomor21
    echo "21. Configure a Repository"
    score21=0
    appstream_url="https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/"
    baseos_url="https://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/"
    gpgcheck="gpgcheck=0"
    repos_dir="/etc/yum.repos.d/"
    for repo_file in $($sshnode2 "ls '$repos_dir'/*"); do
        if $sshnode2 [ -f "$repo_file" ]; then
            if $sshnode2 grep -q "$appstream_url" "$repo_file" && $sshnode2 grep -q "$gpgcheck" "$repo_file"; then
                echo "AppStream Repo: $repo_file"
                score21=$((score21 + 50))
            elif $sshnode2 grep -q "$baseos_url" "$repo_file" && $sshnode2 grep -q "$gpgcheck" "$repo_file"; then
                echo "BaseOS Repo: $repo_file"
                score21=$((score21 + 50))
            else
                echo "File $repo_file tidak memenuhi kriteria."
            fi
        fi
    done
    if [ $score21 -ge 100 ]; then
        score21=100
        echo "Configure Repository: PASS"
    else
        echo "Configure Repository: FAIL"
    fi
    echo "NILAI NOMOR21 = ${score21}%"
    echo ""

   #nomor22
   echo "22. Create SWAP"
   score22=0
   SIZE_SWAP="512M"
   $sshnode2 "lsblk --output=NAME,SIZE,MOUNTPOINTS | grep SWAP | grep '$SIZE_SWAP'"
   if [ $? -eq 0 ]; then
      echo "Create SWAP : PASS"
      score22=100
   else
      echo "Create SWAP : Fail"
   fi
   echo "NILAI NOMOR22 = ${score22}%"
   echo ""

   #nomor23 & 24
   echo "23 & 24. Create and Resize LV"
   MOUNTPOINT_LV="/mnt/infinite"
   size_lv=$($sshnode2 "lsblk --output=NAME,SIZE,MOUNTPOINT | grep datastore-database | grep '$MOUNTPOINT_LV'")
   if echo "$size_lv" | grep -q "400M"; then
      echo "Create LV : PASS"
      echo "Resize LV : FAIL"
      score23=100
      score24=0
   elif echo "$size_lv" | grep -q "800M"; then
      echo "Create LV : PASS"
      echo "Resize LV : PASS"
      score23=100
      score24=100
   else
       echo "Create LV : FAIL"
       echo "Resize LV : FAIL"
       score23=0
       score24=0
   fi
   echo "NILAI NOMOR23 = ${score23}%"
   echo "NILAI NOMOR24 = ${score24}%"
   echo ""

   #nomor25
   echo "25. Tuned Recommended Profile"
   score25=0
   REC_PROFILE=$($sshnode2 "tuned-adm recommend")
   $sshnode2 "tuned-adm active | grep '$REC_PROFILE'"
   if [ $? -eq 0 ]; then
      echo "Tuned Recommended : PASS"
      score25=100
   else
      echo "Tuned Recommended : Fail"
   fi
   echo "NILAI NOMOR25 = ${score25}%"
   echo ""
   
    # TOTAL
    echo "##########################################################################"
    echo ""
    echo "NODE1:"
    echo "NILAI NOMOR 1  = ${score1}%"
    echo "NILAI NOMOR 2  = ${score2}%"
    echo "NILAI NOMOR 3  = ${score3}%"
    echo "NILAI NOMOR 4  = ${score4}%"
    echo "NILAI NOMOR 5  = ${score5}%"
    echo "NILAI NOMOR 6  = ${score6}%"
    echo "NILAI NOMOR 7  = ${score7}%"
    echo "NILAI NOMOR 8  = ${score8}%"
    echo "NILAI NOMOR 9  = ${score9}%"
    echo "NILAI NOMOR 10 = ${score10}%"
    echo "NILAI NOMOR 11  = ${score11}%"
    echo "NILAI NOMOR 12  = ${score12}%"
    echo "NILAI NOMOR 13  = ${score13}%"
    echo "NILAI NOMOR 14  = ${score14}%"
    echo "NILAI NOMOR 15  = ${score15}%"
    echo "NILAI NOMOR 16  = ${score16}%"
    echo "NILAI NOMOR 17  = ${score17}%"
    echo "NILAI NOMOR 18  = ${score18}%"
    echo "NILAI NOMOR 19  = ${score19}%"
    echo ""
    echo "NODE2:"
    echo "NILAI NOMOR 20  = ${score20}%"
    echo "NILAI NOMOR 21  = ${score21}%"
    echo "NILAI NOMOR 22  = ${score22}%"
    echo "NILAI NOMOR 23  = ${score23}%"
    echo "NILAI NOMOR 24  = ${score24}%"
    echo "NILAI NOMOR 25  = ${score25}%"

    weighted_score1=$(echo "scale=2; $score1 * 0.10" | bc)
    weighted_score2=$(echo "scale=2; $score2 * 0.01" | bc)
    weighted_score3=$(echo "scale=2; $score3 * 0.08" | bc)
    weighted_score4=$(echo "scale=2; $score4 * 0.01" | bc)
    weighted_score5=$(echo "scale=2; $score5 * 0.01" | bc)
    weighted_score6=$(echo "scale=2; $score6 * 0.10" | bc)
    weighted_score7=$(echo "scale=2; $score7 * 0.01" | bc)
    weighted_score8=$(echo "scale=2; $score8 * 0.01" | bc)
    weighted_score9=$(echo "scale=2; $score9 * 0.02" | bc)
    weighted_score10=$(echo "scale=2; $score10 * 0.01" | bc)
    weighted_score11=$(echo "scale=2; $score11 * 0.01" | bc)
    weighted_score12=$(echo "scale=2; $score12 * 0.02" | bc)
    weighted_score13=$(echo "scale=2; $score13 * 0.05" | bc)
    weighted_score14=$(echo "scale=2; $score14 * 0.14" | bc)
    weighted_score15=$(echo "scale=2; $score15 * 0.01" | bc)
    weighted_score16=$(echo "scale=2; $score16 * 0.01" | bc)
    weighted_score17=$(echo "scale=2; $score17 * 0.01" | bc)
    weighted_score18=$(echo "scale=2; $score18 * 0.01" | bc)
    weighted_score19=$(echo "scale=2; $score19 * 0.05" | bc)
    weighted_score20=$(echo "scale=2; $score20 * 0.10" | bc)
    weighted_score21=$(echo "scale=2; $score21 * 0.01" | bc)
    weighted_score22=$(echo "scale=2; $score22 * 0.05" | bc)
    weighted_score23=$(echo "scale=2; $score23 * 0.15" | bc)
    weighted_score24=$(echo "scale=2; $score24 * 0.01" | bc)
    weighted_score25=$(echo "scale=2; $score25 * 0.01" | bc)

    NILAI_TOTAL=$(echo "scale=2; $weighted_score1 + $weighted_score2 + $weighted_score3 + $weighted_score4 + $weighted_score5 + $weighted_score6 + $weighted_score7 + $weighted_score8 + $weighted_score9 + $weighted_score10 + $weighted_score11 + $weighted_score12 + $weighted_score13 + $weighted_score14 + $weighted_score15 + $weighted_score16 + $weighted_score17 + $weighted_score18 + $weighted_score19 + $weighted_score20 + $weighted_score21 + $weighted_score22 + $weighted_score23 + $weighted_score24 + $weighted_score25" | bc)

    predict=$(echo "scale=2; $NILAI_TOTAL * 3" | bc)
    echo ""
    echo "NILAI AKHIR = ${NILAI_TOTAL}%"
    echo "Predict Score = $predict"

    if [ $(echo "$NILAI_TOTAL >= 70" | bc -l) -eq 1 ]; then
    echo -e "\e[1;42;97m YOU PASS THE TIMEDRILLS EXERCISE \e[0m"
    status="PASS"
    else
    echo -e "\e[1;41;97m YOU FAIL THE TIMEDRILLS EXERCISE, DONT GIVE UP, TRY AGAIN \e[0m"
    status="FAIL"
    fi

    echo ""
    echo "############################  FINISH  ####################################"
}

read -p "ketik 'gas': " gas

if [ "$gas" == "gas" ]; then
        script_grade
else
        echo "GAS AJA!!!"
fi
